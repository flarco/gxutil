name: Build & Release

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]

    steps:
    - uses: actions/checkout@v1

    - name: Dump context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: |
        echo "JOB_CONTEXT -> $JOB_CONTEXT"
        echo "MATRIX_CONTEXT -> $MATRIX_CONTEXT"
        echo "RUNNER_CONTEXT -> $RUNNER_CONTEXT"
      
    - name: Set up GoLang
      uses: actions/setup-go@v1
      with:
        go-version: '1.13.1'
  
    - name: Prepare Build
      run: |
        export GO_BIN_FOLDER=$HOME/go/bin
        export TMPDIR=~/tmp/
        export PATH=$GO_BIN_FOLDER:$PATH
        mkdir -p $TMPDIR
        go get github.com/markbates/pkger/cmd/pkger
        
        pkger -include github.com/flarco/gxutil:/templates -o cmd/sling
        
    - name: Build Sling (Linux)
      if: runner.os == 'linux'
      run: |
        echo "Building sling-linux"
        GOOS=linux GOARCH=amd64 go build -o sling-linux cmd/sling/*.go

    - name: Build Sling (Mac)
      if: runner.os == 'macOS'
      run: |
        echo "Building sling-mac"
        GOOS=darwin GOARCH=amd64 go build -o sling-mac cmd/sling/*.go
      
    - name: Build Sling (Windows)
      if: runner.os == 'windows'
      run: |
        echo "Building sling-win.exe"
        GOOS=windows GOARCH=386 go build -o sling-win.exe cmd/sling/*.go


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: Release latest
        draft: false
        prerelease: true

    - name: Release URL
      run: echo "${{ steps.create_release.outputs.upload_url }}"
    
    - name: Upload Release Asset
      if: runner.os == 'linux'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: sling-linux
        asset_name: sling-linux
        # asset_content_type: application/zip

    
    # - uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: "latest"
    #     prerelease: true
    #     title: "Development Build: ${{ runner.os }}"
    #     files: |
    #       sling-*
