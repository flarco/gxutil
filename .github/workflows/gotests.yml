name: Test

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      
      mysql:
        image: mysql:8
        options: "--bind-address='0.0.0.0' --default-authentication-plugin=mysql_native_password"
        env:
          MYSQL_ROOT_PASSWORD: "password"
          MYSQL_DATABASE: "mysql"
          MYSQL_USER: "admin"
          MYSQL_PASSWORD: "password"
        ports:
          - 53306:3306
      
      oracle:
        image: konnecteam/docker-oracle-xe-11g
        env:
          ORACLE_ALLOW_REMOTE: "true"
        ports:
          - 1521:1521
      
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "MsSql123!"
        ports:
          - 1433:1433
          - 1434:1434

    steps:
    - uses: actions/checkout@v1

    - name: Set up GoLang
      uses: actions/setup-go@v1
      with:
        go-version: '1.13.1'
    
    - name: Run Go Tests
      run: |
        go test -v

        cd cmd/sling
        go test -v

      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres?sslmode=disable
        MYSQL_URL: mysql://mysql:mysql@localhost:53306/mysql
        ORACLE_URL: oracle://system:oracle@localhost:1521/xe
        MSSQL_URL: sqlserver://sa:MsSql123!@localhost:1433/master
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        S3_REGION: ${{ secrets.S3_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
    